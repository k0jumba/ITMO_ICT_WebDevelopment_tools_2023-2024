version: "3.8"

services:
  db:
    image: postgres:16-bullseye
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "127.0.0.1:5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 10s
      retries: 3

  parser:
    build:
      context: .
      dockerfile: Dockerfile.parser
    ports:
      - "127.0.0.1:8001:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_URL=${DB_URL_ASYNC}
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "8000"]
      interval: 5s
      timeout: 10s
      retries: 3

  redis:
    image: redis:latest
    ports:
      - "127.0.0.1:6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 10s
      retries: 3
  
  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    depends_on:
      redis:
        condition: service_healthy
      parser:
        condition: service_healthy
    environment:
      - BROKER_URL=${BROKER_URL}
      - BACKEND_URL=${BACKEND_URL}
      - PARSER_URL=${PARSER_URL}

  web:
    build:
      context: .
      dockerfile: Dockerfile.web
    ports:
      - "127.0.0.1:8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DB_URL=${DB_URL}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
      - DEFAULT_EXP_DELTA_MIN=${DEFAULT_EXP_DELTA_MIN}
      - PARSER_URL=${PARSER_URL}
      - BROKER_URL=${BROKER_URL}
      - BACKEND_URL=${BACKEND_URL}
